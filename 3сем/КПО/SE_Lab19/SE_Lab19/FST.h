#pragma once

namespace FST
{
	struct RELATION // ребро:символ -> вершина графа переходов КА
	{
		char symbol; // символ перехода
		int nnode; // номер смежной вершины

		RELATION(
			char c = 0x00, // символ перехода
			short ns = 0 // новое состояние
		);
	};

	struct NODE // вершина графа переходов
	{
		short n_relation; // количество инциндентных ребер
		RELATION* relations; // массив инциндентных ребер

		NODE();

		NODE(
			short n, // количество инциндентных ребер
			RELATION rel, // список ребер
			... // список ребер
		);
	};

	struct FST // недотерминированный конечный автомат
	{
		char* string; // цепочка(строка завершается 0x00)
		short position; // текущая позиция в цепочке
		short nstates; // количество состояний КА
		NODE* nodes; // граф переходов: [0] - начальное состояние, [nstate-1] - конечное
		short* rstates; // возможные состояния автомата на данной позиции

		FST(
			char* s, // цепочка
			short ns, // количество состояний
			NODE n, // граф переходов/ список состояний
			...
		);
	};

	bool execute( // выполнить распознавание цепочки
		FST& fst // недотерминированный конечный автомат
	);
}