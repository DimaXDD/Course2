#ifndef LIBPLANETS
#define LIBPLANETS 1
const double pi=3.14159;


struct CSizeD
{
  double cx;
  double cy;
};
//-------------------------------------------------------------------------------
struct CRectD 
 { 
  double left; 
  double top; 
  double right; 
  double bottom; 
  CRectD(){left=top=right=bottom=0;};
  CRectD(double l,double t,double r,double b);
  void SetRectD(double l,double t,double r,double b);
  CSizeD SizeD();	// Возвращает размеры(ширина, высота) прямоугольника 
 };


//-------------------------------------------------------------------------------
CMatrix CreateTranslate2D(double dx, double dy);
// Формирует матрицу для преобразования координат ОБЪЕКТА при его смещении 
// на dx по оси X и на dy по оси Y в фиксированной системе координат
// --- ИЛИ ---
// Формирует матрицу для преобразования координат объекта при смещении начала
// системы координат на -dx оси X и на -dy по оси Y при фиксированном положении объекта 
//---------------------------------------------------------------------------------
CMatrix CreateRotate2D(double fi);
// Формирует матрицу для преобразования координат ОБЪЕКТА  при его повороте
// на угол fi (при fi>0 против часовой стрелки)в фиксированной системе координат
// --- ИЛИ ---
// Формирует матрицу для преобразования координат объекта при повороте начала
// системы координат на угол -fi при фиксированном положении объекта 
// fi - угол в градусах

//-----------------------------------------------------------------------------
CMatrix SpaceToWindow(CRectD& rs,CRect& rw);
// Возвращает матрицу пересчета координат из мировых в оконные
// rs - область в мировых координатах - double
// rw - область в оконных координатах - int

//------------------------------------------------------------------------------
void SetMyMode(CDC& dc,CRectD& RS,CRect& RW);  //MFC
// Устанавливает режим отображения MM_ANISOTROPIC и его параметры
// dc - ссылка на класс CDC MFC
// RS -  область в мировых координатах 
// RW -	 Область в оконных координатах - int  
//------------------------------------------------------------------------------


/////////////////  class CSunSystem //////////////////////////////////////////////

class CSunSystem
{
	CRect Sun;		   // Прямоугольник Солнца
	CRect Earth;	   // Прямоугольник Земли
	CRect Moon;		   // Прямоугольник Луны
	CRect EarthOrbit;  // Прямоугольник, описанный вокруг орбиты Земли
	CRect MoonOrbit;   // Прямоугольник, описанный вокруг орбиты Луны
	CMatrix ECoords;   // Текущие координаты Земли в СК Солнца ( x,y,1)
	CMatrix MCoords;   // Текущие координаты Луны в СК Земли ( x,y,1)
	CMatrix MCoords1;  // Текущие координаты Луны в СК Солнца ( x,y,1)
	CMatrix PM;		   // Матрица поворота для луны
	CMatrix PE;		   // Матрица поворота для Земли
	CRect RW;		   // Прямоугольник в окне
	CRectD RS;		   // Прямоугольник области в МСК
	double wEarth;	   // Угловая скорость Земли относительно Солнца, град./сек.
	double wMoon;	   // Угловая скорость Земли относительно Солнца, град./сек.
	double fiE;		   // Угловое положение Земли в системе кординат Солнца, град
	double dfiE;	   // Угол поворота Земли за время dt.
	double fiM;		   // Угловое положение Луны в системе кординат Земли, град
	double dfiM;	   // Угол поворота Земли за время dt

	double dt;		   // Интервал дискретизации, сек.
 public:
	CSunSystem();
	void SetDT(double dtx){dt=dtx;}; // Установка интервала дискретизации
	void SetNewCoords();         // Вычисляет новые координаты планет
	void GetRS(CRectD& RSX);	 // Возвращает область графика в мировой СК
	CRect GetRW(){return RW;};	 // Возвращает область графика в окне	
	void Draw(CDC& dc);		     // Рисование без самостоятельного пересчета координат
};


#endif

